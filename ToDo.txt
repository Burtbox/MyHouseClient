Look into ETag to replace no-cache!

sort out user objects! All over the place atm

Clean up and type reducer and action code

sort out code formatter vs linter!

Design a pattern for React/Redux usage - guidelines:
    UI State (e.g. loading) - react state
    Data from DB - redux store

    Takeaway: keep UI state and transitory data (such as form inputs) in local state.
    Takeaway: keep data that you intend to share across components in store.

look into Redux-offline (new package to handle offline)

setup Enzyme/Jest mocking for api calls

switch to ts-lint-react for linter as inconsistent spacing between dom (2 spaces) and code (4 spaces)

Flag user as deleted, then a leave household button suffices, Hangfire background cleanup task after a month

Refactor unit tests - can test each refactored stateless component separately for better unit tests! 

BUGS:
make nav sidebar and form content responsive (if sidebar hidden expand form div!)
nav sidebar not updating when switching user (until new household list get!)
Add household not showing progress or completion correctly 

v2: 
HouseholdsList - Show existing other occupants in this list?
Household invite sends email, even if not a current firebase user
Allow decline of invites and 'removal' of household memebers / leaving household